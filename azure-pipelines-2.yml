trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    steps:
    - script: | 
        echo "Restoring project dependencies"
      displayName: "Restore dependencies"

    - script: | 
        echo "Running unit tests"
      displayName: "Run unit tests"

- stage: Test
  displayName: 'Test stage'
  dependsOn: Build
  isSkippable: false
  jobs:
  - job: TestJob
    displayName: 'Test job'
    steps:
    - script: |
        echo "Running unit tests"
      displayName: "Run unit tests"

- stage: DeploytoStaging
  displayName: "Deploy to staging"
  dependsOn: Test
  jobs:
  - job: DeployStagingJob
    displayName: "Deploy to staging job"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        echo "Build staging job"
      displayName: "Build and deploy to staging"
  
  - job: DeployStagingJobWithValidation
    displayName: "Deploy to staging with validation"
    pool: server
    timeoutInMinutes: 4320
    steps:
    - task: ManualValidation@1
      timeoutInMinutes: 1440
      inputs:
        notifyUser: user@example.com
        instructions: 'Please validate the stage configuration and resume'
        onTimeout: 'resume'

- stage: DeployToProduction
  displayName: 'Deploy to production'
  dependsOn: DeploytoStaging
  lockDehavior: sequential
  condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/main', 'refs/heads/release'))
  jobs:
  - job: DeployProductionJob
    displayName: "Deploy to production job"
    steps:
    - script: |
        echo "Deploying to production"
      displayName: "Run deployment commands"
    
  - job: WaitForValidation
    displayName: "Wait for external validation"
    pool: server
    timeoutInMinutes: 4320
    steps:
    - task: ManualValidation@1
      inputs:
        notifyUser: user@example.com
        instructions: 'Please validate the build configuration and resume'
        onTimeout: 'resume'

- stage: DeployToAlternateProduction
  displayName: 'Deploy to alternate prouduction environment'
  condition: succeeded()
  trigger: manual
  jobs:
  - job: DeployAlternateProductionJob
    displayName: "Deploy to alternate production job"
    steps:
    - script: | 
        echo "Deploying to alternate production"
      displayName: "Run deployment commands"
    
- stage: Rollback
  displayName: 'Rollback stage'
  trigger: manual
  jobs:
  - job: RollbackJob
    displayName: "Roll back job"
    steps:
    - script: | 
        echo "Rollback the deployment"
      displayName: "Run rollback commands"

